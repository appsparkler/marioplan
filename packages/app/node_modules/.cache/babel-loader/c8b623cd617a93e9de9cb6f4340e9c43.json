{"ast":null,"code":"import { db } from '../../firebase-app';\nexport const createProject = project => async dispatch => {\n  dispatch({\n    type: 'CREATE_PROJECT_STARTED'\n  });\n  const projectDocReference = await db.collection('projects').add(project);\n  const projectDocSnapshot = await projectDocReference.get();\n  dispatch({\n    type: 'CREATE_PROJECT',\n    project: projectDocSnapshot.data()\n  });\n  dispatch({\n    type: 'CREATE_PROJECT_DONE'\n  });\n};\nexport const fetchAndStoreProjects = () => async dispatch => {\n  dispatch({\n    type: 'FETCH_PROJECTS_STARTED'\n  });\n  const projectCollection = await db.collection('projects').get();\n  const projects = projectCollection.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n  dispatch({\n    type: 'STORE_PROJECTS',\n    projects\n  });\n  dispatch({\n    type: 'FETCH_PROJECTS_DONE'\n  });\n};\nexport const fetchProject = projectId => async dispatch => {\n  dispatch({\n    type: 'FETCH_PROJECT_STARTED'\n  });\n  const docRef = db.collection('projects').doc(projectId);\n  const doc = await docRef.get();\n  if (doc.exists) dispatch({\n    type: 'STORE_FETCHED_PROJECT',\n    project: doc.data()\n  });else console.log('no such doc...');\n  dispatch({\n    type: 'FETCH_PROJECT_ENDED'\n  });\n};","map":{"version":3,"sources":["/Users/ashah/Documents/projects/github/marioplan/packages/app/src/store/actions/project.js"],"names":["db","createProject","project","dispatch","type","projectDocReference","collection","add","projectDocSnapshot","get","data","fetchAndStoreProjects","projectCollection","projects","docs","map","doc","id","fetchProject","projectId","docRef","exists","console","log"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,oBAAjB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAc,MAAOC,QAAP,IAAkB;AAC3DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACA,QAAMC,mBAAmB,GAAG,MAAML,EAAE,CAACM,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BL,OAA9B,CAAlC;AACA,QAAMM,kBAAkB,GAAG,MAAMH,mBAAmB,CAACI,GAApB,EAAjC;AACAN,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,gBAAP;AAAyBF,IAAAA,OAAO,EAAEM,kBAAkB,CAACE,IAAnB;AAAlC,GAAD,CAAR;AACAP,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMO,qBAAqB,GAAG,MAAO,MAAOR,QAAP,IAAmB;AAC7DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACA,QAAMQ,iBAAiB,GAAG,MAAMZ,EAAE,CAACM,UAAH,CAAc,UAAd,EAA0BG,GAA1B,EAAhC;AACA,QAAMI,QAAQ,GAAGD,iBAAiB,CAACE,IAAlB,CAAuBC,GAAvB,CAA4BC,GAAD,KAAU;AACpDC,IAAAA,EAAE,EAAED,GAAG,CAACC,EAD4C;AAEpD,OAAGD,GAAG,CAACN,IAAJ;AAFiD,GAAV,CAA3B,CAAjB;AAIAP,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE,gBADC;AAEPS,IAAAA;AAFO,GAAD,CAAR;AAIAV,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACD,CAZM;AAcP,OAAO,MAAMc,YAAY,GAAIC,SAAD,IAAgB,MAAOhB,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACA,QAAMgB,MAAM,GAAGpB,EAAE,CAACM,UAAH,CAAc,UAAd,EAA0BU,GAA1B,CAA8BG,SAA9B,CAAf;AACA,QAAMH,GAAG,GAAG,MAAMI,MAAM,CAACX,GAAP,EAAlB;AACA,MAAIO,GAAG,CAACK,MAAR,EAAgBlB,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,uBAAP;AAAgCF,IAAAA,OAAO,EAAEc,GAAG,CAACN,IAAJ;AAAzC,GAAD,CAAR,CAAhB,KACKY,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACLpB,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;AACD,CAPM","sourcesContent":["import {db} from '../../firebase-app'\n\nexport const createProject = (project) => (async (dispatch)=>{\n  dispatch({type: 'CREATE_PROJECT_STARTED'})\n  const projectDocReference = await db.collection('projects').add(project)\n  const projectDocSnapshot = await projectDocReference.get()\n  dispatch({type: 'CREATE_PROJECT', project: projectDocSnapshot.data()})\n  dispatch({type: 'CREATE_PROJECT_DONE'})\n})\n\nexport const fetchAndStoreProjects = () => (async (dispatch)=> {\n  dispatch({type: 'FETCH_PROJECTS_STARTED'})\n  const projectCollection = await db.collection('projects').get()\n  const projects = projectCollection.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }))\n  dispatch({\n    type: 'STORE_PROJECTS',\n    projects,\n  })\n  dispatch({type: 'FETCH_PROJECTS_DONE'})\n})\n\nexport const fetchProject = (projectId) => (async (dispatch) => {\n  dispatch({type: 'FETCH_PROJECT_STARTED'})\n  const docRef = db.collection('projects').doc(projectId)\n  const doc = await docRef.get()\n  if (doc.exists) dispatch({type: 'STORE_FETCHED_PROJECT', project: doc.data()})\n  else console.log('no such doc...')\n  dispatch({type: 'FETCH_PROJECT_ENDED'})\n})\n"]},"metadata":{},"sourceType":"module"}